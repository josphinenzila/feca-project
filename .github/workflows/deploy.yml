name: Deploy to cPanel

on:
  push:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, gd

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install Laravel dependencies
        working-directory: ./api
        run: composer install --optimize-autoloader --no-dev

      - name: Create Laravel .env
        working-directory: ./api
        run: |
          cat > .env << EOF
          APP_NAME=${{ secrets.LARAVEL_APP_NAME }}
          APP_ENV=production
          APP_KEY=${{ secrets.LARAVEL_APP_KEY }}
          APP_DEBUG=false
          APP_URL=https://feca4development.org
          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_PUBLIC_KEY="${{ secrets.JWT_PUBLIC_KEY }}"
          JWT_PRIVATE_KEY="${{ secrets.JWT_PRIVATE_KEY }}"
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          EOF

      - name: Optimize Laravel
        working-directory: ./api
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      - name: Install Next.js dependencies
        working-directory: ./client
        run: npm ci

      - name: Create Next.js .env
        working-directory: ./client
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_APP_ENV=production
          NEXT_PUBLIC_BACKEND_URL=https://feca4development.org/api
          NEXT_PUBLIC_DOMAIN_URL=https://feca4development.org
          EOF

      - name: Build Next.js
        working-directory: ./client
        run: |
          npm run build
          npx next export || echo "Static export not available"

      - name: Debug - Check build output
        run: |
          echo "=== Checking Next.js build output ==="
          ls -la ./client/
          echo "=== Checking for .next directory ==="
          ls -la ./client/.next/ || echo "No .next directory"
          echo "=== Checking for out directory ==="
          ls -la ./client/out/ || echo "No out directory"
          echo "=== Checking public directory ==="
          ls -la ./client/public/ || echo "No public directory"

      - name: Create deployment package
        run: |
          mkdir -p deploy

          # Copy Laravel API to /api subfolder  
          echo "Copying Laravel API..."
          rsync -av --exclude='node_modules' --exclude='.git' --exclude='tests' ./api/ deploy/api/

          # Copy Next.js files to ROOT with debugging
          echo "Copying Next.js files to root..."
          if [ -d "./client/out" ]; then
            echo "Using static export from /out"
            cp -rv ./client/out/* deploy/
          elif [ -d "./client/.next" ]; then
            echo "Using .next build output"
            cp -rv ./client/.next deploy/
            if [ -d "./client/public" ]; then
              cp -rv ./client/public/* deploy/
            fi
          else
            echo "ERROR: No Next.js build output found!"
            exit 1
          fi

          # Add timestamp to verify upload
          echo "Deployed at: $(date)" > deploy/deploy-timestamp.txt

          echo "=== Final deploy directory structure ==="
          find deploy -type f | head -20

      - name: Deploy via SFTP (Dylan700)
        uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.CPANEL_HOST }}
          username: ${{ secrets.CPANEL_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: ${{ secrets.CPANEL_PORT }}
          uploads: |
            ./deploy/ => /public_html/
          delete: false

      - name: Alternative - Use wlixcc if Dylan700 fails
        if: failure()
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.CPANEL_HOST }}
          username: ${{ secrets.CPANEL_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: ${{ secrets.CPANEL_PORT }}
          local_path: "./deploy/"
          remote_path: "/public_html/"
          sftp_only: true
          delete_remote_files: false

      - name: Final fallback - Use FTP
        if: failure()
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.CPANEL_HOST }}
          username: ${{ secrets.CPANEL_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          protocol: sftp
          port: ${{ secrets.CPANEL_PORT }}
          local-dir: ./deploy/
          server-dir: /public_html/
