name: Deploy to cPanel

on:
  push:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Create Laravel .env
        working-directory: ./api
        run: |
          cat > .env << EOF
          APP_NAME=${{ secrets.LARAVEL_APP_NAME }}
          APP_ENV=production
          APP_KEY=${{ secrets.LARAVEL_APP_KEY }}
          APP_DEBUG=false
          APP_URL=https://feca4development.org
          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_PUBLIC_KEY="${{ secrets.JWT_PUBLIC_KEY }}"
          JWT_PRIVATE_KEY="${{ secrets.JWT_PRIVATE_KEY }}"
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          EOF

      - name: Build Next.js standalone
        working-directory: ./client
        run: |
          cat > .env.production << EOF
          NEXT_PUBLIC_APP_ENV=production
          NEXT_PUBLIC_BACKEND_URL=https://feca4development.org/api
          NEXT_PUBLIC_DOMAIN_URL=https://feca4development.org
          EOF
          npm ci
          npm run build

      - name: Create deployment package
        run: |
          mkdir deploy
          # Laravel (no vendor)
          rsync -av --exclude=vendor --exclude=node_modules --exclude=.git ./api/ deploy/api/
          # Next.js standalone
          mkdir deploy/app
          cp -r ./client/.next/standalone/* deploy/app/
          cp -r ./client/.next/static deploy/app/.next/
          cp -r ./client/public deploy/app/
          echo '{"scripts":{"start":"node server.js"}}' > deploy/app/package.json

      - name: Deploy via SFTP
        run: |
          sshpass -p "${{ secrets.CPANEL_PASSWORD }}" sftp -o StrictHostKeyChecking=no -P ${{ secrets.CPANEL_PORT }} ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} <<EOF
          cd public_html
          lcd deploy
          put -r *
          quit
          EOF

      - name: Setup on server
        run: |
          sshpass -p "${{ secrets.CPANEL_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p ${{ secrets.CPANEL_PORT }} ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} << 'ENDSSH'
          cd public_html/api
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          cd ../app
          node --version || echo "Node.js not available"
          ENDSSH
