name: Deploy to cPanel

on:
  push:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, gd

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install Laravel dependencies
        working-directory: ./api
        run: composer install --optimize-autoloader --no-dev

      - name: Create Laravel .env
        working-directory: ./api
        run: |
          cat > .env << EOF
          APP_NAME=${{ secrets.LARAVEL_APP_NAME }}
          APP_ENV=production
          APP_KEY=${{ secrets.LARAVEL_APP_KEY }}
          APP_DEBUG=false
          APP_URL=https://feca4development.org
          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_PUBLIC_KEY="${{ secrets.JWT_PUBLIC_KEY }}"
          JWT_PRIVATE_KEY="${{ secrets.JWT_PRIVATE_KEY }}"
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          EOF

      - name: Optimize Laravel
        working-directory: ./api
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      - name: Install Next.js dependencies
        working-directory: ./client
        run: npm ci

      - name: Create Next.js .env
        working-directory: ./client
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_APP_ENV=production
          NEXT_PUBLIC_BACKEND_URL=https://feca4development.org/api
          NEXT_PUBLIC_DOMAIN_URL=https://feca4development.org
          EOF

      - name: Build and Export Next.js
        working-directory: ./client
        run: |
          npm run build
          npx next export || echo "Static export not available, using build output"

      - name: Create deployment package
        run: |
          mkdir -p deploy

          # Copy Laravel API to /api subfolder
          rsync -av --exclude='node_modules' --exclude='.git' --exclude='tests' ./api/ deploy/api/

          # Copy Next.js files to ROOT (will overwrite existing index.html)
          if [ -d "./client/out" ]; then
            echo "Using static export from /out"
            cp -r ./client/out/* deploy/
          else
            echo "Using build output"
            cp -r ./client/.next deploy/
            cp -r ./client/public/* deploy/
          fi

          # Copy package.json for reference
          cp ./client/package.json deploy/ || true

      - name: Deploy via SFTP
        uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.CPANEL_HOST }}
          username: ${{ secrets.CPANEL_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: ${{ secrets.CPANEL_PORT }}
          uploads: |
            ./deploy/ => /public_html/
          delete: false
