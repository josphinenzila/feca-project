name: Deploy to cPanel

on:
  push:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Create Laravel .env
        working-directory: ./api
        run: |
          cat > .env << EOF
          APP_NAME=${{ secrets.LARAVEL_APP_NAME }}
          APP_ENV=production
          APP_KEY=${{ secrets.LARAVEL_APP_KEY }}
          APP_DEBUG=false
          APP_URL=https://feca4development.org
          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_PUBLIC_KEY="${{ secrets.JWT_PUBLIC_KEY }}"
          JWT_PRIVATE_KEY="${{ secrets.JWT_PRIVATE_KEY }}"
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          EOF

      - name: Install Next.js dependencies
        working-directory: ./client
        run: npm ci

      - name: Create Next.js .env
        working-directory: ./client
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_APP_ENV=production
          NEXT_PUBLIC_BACKEND_URL=https://feca4development.org/api
          NEXT_PUBLIC_DOMAIN_URL=https://feca4development.org
          EOF

      - name: Build Next.js static export
        working-directory: ./client
        run: |
          npm run build
          echo "=== Checking build output ==="
          ls -la out/

      - name: Create security .htaccess files
        run: |
          # Root .htaccess for frontend routing and security
          cat > root_htaccess << 'EOF'
          # Security Headers
          Header always set X-Content-Type-Options nosniff
          Header always set X-Frame-Options DENY
          Header always set X-XSS-Protection "1; mode=block"
          Header always set Referrer-Policy strict-origin-when-cross-origin

          # Disable directory browsing
          Options -Indexes

          # Hide sensitive files
          <FilesMatch "^\.">
              Require all denied
          </FilesMatch>
          <Files ~ "(\.env|composer\.json|composer\.lock|package\.json|\.git)">
              Require all denied
          </Files>

          # Routing
          RewriteEngine On
          RewriteRule ^_next/(.*)$ _next/$1 [L]
          RewriteRule ^api/(.*)$ api/public/index.php [L]
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule ^(.*)$ index.html [L]
          EOF

          # API .htaccess
          cat > api_htaccess << 'EOF'
          Options -Indexes
          Require all denied
          <Directory "public">
              Require all granted
          </Directory>
          <Files ~ "(\.env|composer\.json|artisan|\.git)">
              Require all denied
          </Files>
          RewriteEngine On
          RewriteRule ^(.*)$ public/index.php [L]
          EOF

          # API public .htaccess
          cat > api_public_htaccess << 'EOF'
          <IfModule mod_rewrite.c>
              Options -MultiViews -Indexes
              RewriteEngine On
              RewriteCond %{HTTP:Authorization} .
              RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteCond %{REQUEST_URI} (.+)/$
              RewriteRule ^ %1 [L,R=301]
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteRule ^ index.php [L]
          </IfModule>
          EOF

      - name: Create deployment package
        run: |
          mkdir -p deploy
          # Laravel API
          rsync -av --exclude='node_modules' --exclude='.git' --exclude='tests' --exclude='vendor' ./api/ deploy/api/
          cp api_htaccess deploy/api/.htaccess
          cp api_public_htaccess deploy/api/public/.htaccess
          # Next.js static files to root
          cp -r ./client/out/* deploy/
          cp root_htaccess deploy/.htaccess

      - name: Deploy via SFTP
        run: |
          sshpass -p "${{ secrets.CPANEL_PASSWORD }}" sftp -o StrictHostKeyChecking=no -P ${{ secrets.CPANEL_PORT }} ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} <<EOF
          cd public_html
          lcd deploy
          put -r *
          quit
          EOF

      - name: Run Composer Install on cPanel
        run: |
          sshpass -p "${{ secrets.CPANEL_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p ${{ secrets.CPANEL_PORT }} ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} << 'ENDSSH'
          cd public_html/api
          composer install --no-dev --optimize-autoloader --no-interaction
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          chmod -R 755 storage bootstrap/cache
          ENDSSH
